-Essentially, the float property allows us to take an element, remove it from the normal flow of a page, 
and position it to the left or right of its parent element.
-Ex: An <img> element floated to the side of a few paragraphs of text, for example, 
will allow the paragraphs to wrap around the image as necessary.
-When we float an element, we take it out of the normal flow of the HTML document. This causes 
the width of that element to default to the width of the content within it. Sometimes, such as 
when we’re creating columns for a reusable layout, this behavior is not desired. It can be 
corrected by adding a fixed width property value to each column. Additionally, to prevent 
floated elements from touching one another, causing the content of one to sit directly next to 
the content of the other, we can use the margin property to create space between elements.
When floating an element, it is also important to recognize that an element is removed from the normal 
flow of a page, and that may change an element’s default display value. The float property relies on 
an element having a display value of block, and may alter an element’s default display value if it is 
not already displayed as a block-level element.
-Floats: The left value will clear left floats, while the right value will clear right floats. The both value, however, will clear both left and right floats and is often the most ideal value. It is important that this clear be applied to an element appearing after the floated elements, not before, to return the page to its normal flow.
-Rather than clearing floats, another option is to contain the floats. The outcomes of containing floats versus those of clearing them are nearly the same; however, containing floats does help to ensure that all of our styles will be rendered properly.
-To contain floats, the floated elements must reside within a parent element. The parent element will act as a container, leaving the flow of the document completely normal outside of it.
-(*zoom: 1;) Gets older browsers to play nicely with floats.
Ex: 
  group {
  clear: both;
  *zoom: 1;
}
-Removing white space between elements: remove the white space between inline-block elements is to open an HTML comment directly after an inline-block element’s closing tag. Then, close the HTML com- ment immediately before the next inline-block element’s opening tag. Doing this allows inline-block elements to begin and end on separate lines of HTML and “comments out” any potential spaces between the elements.
-use inline-block elements to create the grid—or layout—of a page and to then use floats when I want content to wrap around a given element (as floats were intended to do with images). Generally, I also find inline-block elements easier to work with.
-Use floats to wrap content around a certain element and inline-block for grids
-The position property identifies how an element is positioned on a page and whether or not it will appear within the normal flow of a document. This is used in conjunction with the box offset properties—top, right, bottom, and left—which identify exactly where an element will be positioned by moving elements in a number of different directions.
-relative position: The relative value for the position property allows elements to appear within the normal flow a page, leaving space for an element as intended while not allowing other elements to flow around it; however, it also allows an element’s display position to be modified with the box offset properties. 
- absolute position: The absolute value for the position property is different from the relative value in that an element with a position value of absolute will not appear within the normal flow of a document, and the original space and position of the absolutely positioned element will not be preserved.
- Typically, most positioning can be handled without the use of the position property and box offset properties, but in certain cases they can be extremely helpful.
